pipeline {
    agent any

    environment {
        IMAGE_NAME = "kyumin19/be"
        IMAGE_TAG = "latest"
        DISCORD_WEBHOOK = credentials('discord-webhook')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/TeamOldYoung/BE.git'
            }
        }

        stage('Build') {
            steps {
                dir('oldYoung') {
                      sh './gradlew clean bootJar -x test --no-daemon --console=plain --no-parallel -Dorg.gradle.jvmargs="-Xmx256m -Xms128m"'
                }
            }
        }

        // stage('Test') {
        //    steps {
        //        sh './gradlew test'
        //        publishTestResults testResultsPattern: 'build/test-results/**/*.xml'
        //        publishHTML([
        //            allowMissing: false,
        //            alwaysLinkToLastBuild: true,
        //            keepAll: true,
        //            reportDir: 'build/reports/tests/test',
        //            reportFiles: 'index.html',
        //            reportName: 'Test Report'
        //        ])
        //    }
        //    post {
        //        always {
        //            archiveArtifacts artifacts: 'build/test-results/**/*.xml', fingerprint: true
        //        }
        //    }
        //}

        stage('Docker Build & Push') {
            steps {
                dir('oldYoung') {
                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                            def image = docker.build("kyumin19/be:latest")
                            image.push()
                            image.push("${BUILD_NUMBER}")
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        success {
            script {
                // ÏµúÍ∑º Ïª§Î∞ã Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
                def commitInfo = sh(script: "git log -1 --pretty=format:'%h | %an | %s'", returnStdout: true).trim()

                // Discord Ï†ÑÏÜ°
                sh """
                    curl -H "Content-Type: application/json" \
                    -X POST \
                    -d '{"content": "‚úÖ Jenkins ÎπåÎìú ÏÑ±Í≥µ!\\nÏù¥ÎØ∏ÏßÄ: ${IMAGE_NAME}:${IMAGE_TAG}\\nÎπåÎìú: #${BUILD_NUMBER}\\nÏª§Î∞ã: ${commitInfo}"}' \
                    ${DISCORD_WEBHOOK}
                """
            }
        }
        failure {
            script {
                def commitInfo = sh(script: "git log -1 --pretty=format:'%h | %an | %s'", returnStdout: true).trim()

                sh """
                    curl -H "Content-Type: application/json" \
                    -X POST \
                    -d '{"content": "üö® Jenkins ÎπåÎìú Ïã§Ìå®! Ï£ΩÏùÑÎûòÏöî?\\nÎπåÎìú: #${BUILD_NUMBER}\\nÏª§Î∞ã: ${commitInfo}"}' \
                    ${DISCORD_WEBHOOK}
                """
            }
        }
    }
}
